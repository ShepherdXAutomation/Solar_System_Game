{"mappings":"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","sources":["<anon>","public/solar-system.js"],"sourcesContent":["var $0a8200a792fc4c3f$exports = {};\n// module aliases\nvar $0a8200a792fc4c3f$var$Engine = Matter.Engine, $0a8200a792fc4c3f$var$Render = Matter.Render, $0a8200a792fc4c3f$var$World = Matter.World, $0a8200a792fc4c3f$var$Bodies = Matter.Bodies, $0a8200a792fc4c3f$var$Constraint = Matter.Constraint, $0a8200a792fc4c3f$var$Mouse = Matter.Mouse, $0a8200a792fc4c3f$var$MouseConstraint = Matter.MouseConstraint;\n// create an engine\nvar $0a8200a792fc4c3f$var$engine = $0a8200a792fc4c3f$var$Engine.create();\nvar $0a8200a792fc4c3f$var$render = $0a8200a792fc4c3f$var$Render.create({\n    element: document.body,\n    engine: $0a8200a792fc4c3f$var$engine,\n    options: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        wireframes: false,\n        background: \"#0f0f13\" // Optional: set a background color\n    }\n});\n// Set the canvas to fill the screen and remove any margins\ndocument.body.style.margin = \"0\";\ndocument.body.style.overflow = \"hidden\";\n// create two boxes and a ground\nvar $0a8200a792fc4c3f$var$boxA = $0a8200a792fc4c3f$var$Bodies.rectangle(400, 200, 80, 80);\nvar $0a8200a792fc4c3f$var$ball = $0a8200a792fc4c3f$var$Bodies.circle(260, 100, 40, {\n    density: 0.04\n});\n//var ground = Bodies.rectangle(400, 610, 810, 60, { isStatic: true });\n// create a mouse controlled constraint\nvar $0a8200a792fc4c3f$var$mouse = $0a8200a792fc4c3f$var$Mouse.create($0a8200a792fc4c3f$var$render.canvas), $0a8200a792fc4c3f$var$mouseConstraint = $0a8200a792fc4c3f$var$MouseConstraint.create($0a8200a792fc4c3f$var$engine, {\n    mouse: $0a8200a792fc4c3f$var$mouse,\n    constraint: {\n        stiffness: 0.2,\n        render: {\n            visible: false\n        }\n    }\n});\nvar $0a8200a792fc4c3f$var$sun = $0a8200a792fc4c3f$var$Bodies.circle(50, 50, 300, {\n    density: 1,\n    render: {\n        fillStyle: \"yellow\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$mercury = $0a8200a792fc4c3f$var$Bodies.circle(350, 350, 5, {\n    density: 1,\n    render: {\n        fillStyle: \"grey\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$mercury_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 350,\n        y: 350\n    },\n    bodyB: $0a8200a792fc4c3f$var$mercury,\n    density: 1,\n    stiffness: 0.001,\n    length: 5,\n    render: {\n        visible: false,\n        lineWidth: 7,\n        strokeStyle: \"#ffffff\"\n    }\n});\n// add \nvar $0a8200a792fc4c3f$var$venus = $0a8200a792fc4c3f$var$Bodies.circle(400, 380, 10, {\n    density: 1,\n    render: {\n        fillStyle: \"#FFECA1\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$venus_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 400,\n        y: 380\n    },\n    bodyB: $0a8200a792fc4c3f$var$venus,\n    density: 1,\n    stiffness: 0.001,\n    length: 7,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\nvar $0a8200a792fc4c3f$var$earth = $0a8200a792fc4c3f$var$Bodies.circle(450, 420, 10, {\n    density: 1,\n    render: {\n        fillStyle: \"#2FA002\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$earth_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 450,\n        y: 420\n    },\n    bodyB: $0a8200a792fc4c3f$var$earth,\n    density: 1,\n    stiffness: 0.001,\n    length: 7,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\nvar $0a8200a792fc4c3f$var$mars = $0a8200a792fc4c3f$var$Bodies.circle(490, 450, 7, {\n    density: 1,\n    render: {\n        fillStyle: \"#A00A02\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$mars_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 490,\n        y: 450\n    },\n    bodyB: $0a8200a792fc4c3f$var$mars,\n    density: 1,\n    stiffness: 0.001,\n    length: 7,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\nvar $0a8200a792fc4c3f$var$jupiter = $0a8200a792fc4c3f$var$Bodies.circle(550, 550, 70, {\n    density: 1,\n    render: {\n        fillStyle: \"#D3611A\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$jupiter_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 550,\n        y: 550\n    },\n    bodyB: $0a8200a792fc4c3f$var$jupiter,\n    density: 1,\n    stiffness: 0.001,\n    length: 5,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\nvar $0a8200a792fc4c3f$var$saturn = $0a8200a792fc4c3f$var$Bodies.circle(650, 700, 55, {\n    density: 1,\n    render: {\n        fillStyle: \"#A0984D\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$saturn_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 650,\n        y: 700\n    },\n    bodyB: $0a8200a792fc4c3f$var$saturn,\n    density: 1,\n    stiffness: 0.001,\n    length: 5,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\nvar $0a8200a792fc4c3f$var$uranus = $0a8200a792fc4c3f$var$Bodies.circle(800, 750, 55, {\n    density: 1,\n    render: {\n        fillStyle: \"#2BD7CB\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$uranus_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 800,\n        y: 750\n    },\n    bodyB: $0a8200a792fc4c3f$var$uranus,\n    density: 1,\n    stiffness: 0.001,\n    length: 5,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\nvar $0a8200a792fc4c3f$var$neptune = $0a8200a792fc4c3f$var$Bodies.circle(850, 850, 60, {\n    density: 1,\n    render: {\n        fillStyle: \"blue\"\n    },\n    collisionFilter: {\n        category: 0x0001,\n        mask: 0x0001 // Only collide with default category\n    }\n});\nvar $0a8200a792fc4c3f$var$pointBody = $0a8200a792fc4c3f$var$Bodies.circle(400, 400, 10, {\n    isStatic: true,\n    render: {\n        fillStyle: \"red\"\n    },\n    collisionFilter: {\n        category: 0x0004,\n        mask: 0x0000 // Collides with nothing\n    }\n});\nvar $0a8200a792fc4c3f$var$neptune_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 850,\n        y: 850\n    },\n    bodyB: $0a8200a792fc4c3f$var$neptune,\n    density: 1,\n    stiffness: 0.001,\n    length: 10,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\nvar $0a8200a792fc4c3f$var$sun_elastic = $0a8200a792fc4c3f$var$Constraint.create({\n    pointA: {\n        x: 50,\n        y: 50\n    },\n    bodyB: $0a8200a792fc4c3f$var$sun,\n    density: 1,\n    stiffness: 1,\n    length: 50,\n    render: {\n        visible: false,\n        lineWidth: 5,\n        strokeStyle: \"#ffffff\"\n    }\n});\n// add mouse control\nvar $0a8200a792fc4c3f$var$mouse = $0a8200a792fc4c3f$var$Mouse.create($0a8200a792fc4c3f$var$render.canvas), $0a8200a792fc4c3f$var$mouseConstraint = $0a8200a792fc4c3f$var$MouseConstraint.create($0a8200a792fc4c3f$var$engine, {\n    mouse: $0a8200a792fc4c3f$var$mouse,\n    constraint: {\n        render: {\n            visible: false\n        },\n        stiffness: 0.02\n    }\n});\n// add all of the bodies to the world\n$0a8200a792fc4c3f$var$World.add($0a8200a792fc4c3f$var$engine.world, [\n    $0a8200a792fc4c3f$var$sun,\n    $0a8200a792fc4c3f$var$neptune,\n    $0a8200a792fc4c3f$var$mercury,\n    $0a8200a792fc4c3f$var$venus,\n    $0a8200a792fc4c3f$var$earth,\n    $0a8200a792fc4c3f$var$mars,\n    $0a8200a792fc4c3f$var$jupiter,\n    $0a8200a792fc4c3f$var$saturn,\n    $0a8200a792fc4c3f$var$uranus,\n    $0a8200a792fc4c3f$var$sun_elastic,\n    $0a8200a792fc4c3f$var$mercury_elastic,\n    $0a8200a792fc4c3f$var$venus_elastic,\n    $0a8200a792fc4c3f$var$earth_elastic,\n    $0a8200a792fc4c3f$var$mars_elastic,\n    $0a8200a792fc4c3f$var$jupiter_elastic,\n    $0a8200a792fc4c3f$var$saturn_elastic,\n    $0a8200a792fc4c3f$var$uranus_elastic,\n    $0a8200a792fc4c3f$var$neptune_elastic,\n    $0a8200a792fc4c3f$var$mouseConstraint\n]);\nMatter.Events.on($0a8200a792fc4c3f$var$render, \"afterRender\", function(event) {\n    var context = $0a8200a792fc4c3f$var$render.context;\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Mars\", $0a8200a792fc4c3f$var$mars.position.x - 20, $0a8200a792fc4c3f$var$mars.position.y - 10);\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Mercury\", $0a8200a792fc4c3f$var$mercury.position.x - 20, $0a8200a792fc4c3f$var$mercury.position.y - 10);\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Venus\", $0a8200a792fc4c3f$var$venus.position.x - 20, $0a8200a792fc4c3f$var$venus.position.y - 10);\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Earth\", $0a8200a792fc4c3f$var$earth.position.x - 20, $0a8200a792fc4c3f$var$earth.position.y - 10);\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Jupiter\", $0a8200a792fc4c3f$var$jupiter.position.x - 30, $0a8200a792fc4c3f$var$jupiter.position.y);\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Saturn\", $0a8200a792fc4c3f$var$saturn.position.x - 30, $0a8200a792fc4c3f$var$saturn.position.y);\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Uranus\", $0a8200a792fc4c3f$var$uranus.position.x - 30, $0a8200a792fc4c3f$var$uranus.position.y);\n    context.fillStyle = \"#fff\";\n    context.font = \"16px Arial\";\n    context.fillText(\"Neptune\", $0a8200a792fc4c3f$var$neptune.position.x - 30, $0a8200a792fc4c3f$var$neptune.position.y);\n    context.fillStyle = \"black\";\n    context.font = \"24px Arial\";\n    context.fillText(\"Sun\", $0a8200a792fc4c3f$var$sun.position.x - 30, $0a8200a792fc4c3f$var$sun.position.y);\n});\n$0a8200a792fc4c3f$var$render.mouse = $0a8200a792fc4c3f$var$mouse;\n// run the engine\n$0a8200a792fc4c3f$var$Engine.run($0a8200a792fc4c3f$var$engine);\n// run the renderer\n$0a8200a792fc4c3f$var$Render.run($0a8200a792fc4c3f$var$render);\n// Resize the render canvas on window resize\nwindow.addEventListener(\"resize\", function() {\n    $0a8200a792fc4c3f$var$render.canvas.width = window.innerWidth;\n    $0a8200a792fc4c3f$var$render.canvas.height = window.innerHeight;\n    $0a8200a792fc4c3f$var$render.options.width = window.innerWidth;\n    $0a8200a792fc4c3f$var$render.options.height = window.innerHeight;\n});\n\n\n//# sourceMappingURL=index.35c01288.js.map\n","// module aliases\r\nvar Engine = Matter.Engine,\r\n    Render = Matter.Render,\r\n    World = Matter.World,\r\n    Bodies = Matter.Bodies,\r\n    Constraint = Matter.Constraint,\r\n    Mouse = Matter.Mouse,\r\n    MouseConstraint = Matter.MouseConstraint;\r\n\r\n// create an engine\r\nvar engine = Engine.create();\r\n\r\nvar render = Render.create({\r\n    element: document.body,\r\n    engine: engine,\r\n    options: {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        wireframes: false,\r\n        background: '#0f0f13' // Optional: set a background color\r\n    }\r\n});\r\n\r\n// Set the canvas to fill the screen and remove any margins\r\ndocument.body.style.margin = '0';\r\ndocument.body.style.overflow = 'hidden';\r\n\r\n// create two boxes and a ground\r\nvar boxA = Bodies.rectangle(400, 200, 80, 80);\r\nvar ball = Bodies.circle(260, 100, 40, { density: 0.04 });\r\n//var ground = Bodies.rectangle(400, 610, 810, 60, { isStatic: true });\r\n\r\n// create a mouse controlled constraint\r\nvar mouse = Mouse.create(render.canvas),\r\n    mouseConstraint = MouseConstraint.create(engine, {\r\n        mouse: mouse,\r\n        constraint: {\r\n            stiffness: 0.2,\r\n            render: {\r\n                visible: false\r\n            }\r\n        }\r\n    });\r\n\r\n    var sun = Bodies.circle(50, 50, 300, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: 'yellow'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    \r\n    var mercury = Bodies.circle(350, 350, 5, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: 'grey'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    \r\n    var mercury_elastic = Constraint.create({\r\n        pointA: { x: 350, y: 350 },\r\n        bodyB: mercury,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 5,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 7,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n// add \r\n    var venus = Bodies.circle(400, 380, 10, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: '#FFECA1'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    var venus_elastic = Constraint.create({\r\n        pointA: { x: 400, y: 380 },\r\n        bodyB: venus,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 7,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n    var earth = Bodies.circle(450, 420, 10, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: '#2FA002'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    var earth_elastic = Constraint.create({\r\n        pointA: { x: 450, y: 420 },\r\n        bodyB: earth,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 7,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n    var mars = Bodies.circle(490, 450, 7, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: '#A00A02'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    var mars_elastic = Constraint.create({\r\n        pointA: { x: 490, y: 450 },\r\n        bodyB: mars,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 7,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n    var jupiter = Bodies.circle(550, 550, 70, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: '#D3611A'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    var jupiter_elastic = Constraint.create({\r\n        pointA: { x: 550, y: 550 },\r\n        bodyB: jupiter,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 5,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n    var saturn = Bodies.circle(650, 700, 55, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: '#A0984D'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    var saturn_elastic = Constraint.create({\r\n        pointA: { x: 650, y: 700 },\r\n        bodyB: saturn,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 5,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n    var uranus = Bodies.circle( 800, 750, 55, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: '#2BD7CB'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    var uranus_elastic = Constraint.create({\r\n        pointA: { x: 800, y: 750 },\r\n        bodyB: uranus,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 5,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n    var neptune = Bodies.circle(850, 850, 60, {\r\n        density: 1,\r\n        render: {\r\n            fillStyle: 'blue'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0001,\r\n            mask: 0x0001 // Only collide with default category\r\n        }\r\n    });\r\n    \r\n    var pointBody = Bodies.circle(400, 400, 10, {\r\n        isStatic: true,\r\n        render: {\r\n            fillStyle: 'red'\r\n        },\r\n        collisionFilter: {\r\n            category: 0x0004,\r\n            mask: 0x0000 // Collides with nothing\r\n        }\r\n    });\r\n    \r\n    var neptune_elastic = Constraint.create({\r\n        pointA: { x: 850, y: 850 },\r\n        bodyB: neptune,\r\n        density: 1,\r\n        stiffness: 0.001,\r\n        length: 10,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n\r\n    var sun_elastic = Constraint.create({\r\n        pointA: { x: 50, y: 50 },\r\n        bodyB: sun,\r\n        density: 1,\r\n        stiffness: 1,\r\n        length: 50,\r\n        render: {\r\n            visible: false,\r\n            lineWidth: 5,\r\n            strokeStyle: '#ffffff'\r\n        }\r\n    });\r\n// add mouse control\r\nvar mouse = Mouse.create(render.canvas),\r\n    mouseConstraint = MouseConstraint.create(engine, {\r\n        mouse: mouse,\r\n        constraint: {\r\n            render: {\r\n                visible: false\r\n            },\r\n            stiffness: 0.02\r\n        }\r\n    });\r\n\r\n// add all of the bodies to the world\r\nWorld.add(engine.world, [sun, neptune, mercury, venus, earth, mars, jupiter, saturn, uranus, sun_elastic, mercury_elastic, venus_elastic, earth_elastic, mars_elastic, jupiter_elastic, saturn_elastic, uranus_elastic, neptune_elastic, mouseConstraint]);\r\n\r\nMatter.Events.on(render, 'afterRender', function(event) {\r\n    var context = render.context;\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Mars', mars.position.x-20, mars.position.y- 10);\r\n\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Mercury', mercury.position.x-20, mercury.position.y-10);\r\n\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Venus', venus.position.x-20, venus.position.y-10);\r\n\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Earth', earth.position.x-20, earth.position.y-10);\r\n\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Jupiter', jupiter.position.x-30, jupiter.position.y);\r\n\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Saturn', saturn.position.x-30, saturn.position.y);\r\n\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Uranus', uranus.position.x-30, uranus.position.y);\r\n\r\n    context.fillStyle = '#fff';\r\n    context.font = '16px Arial';\r\n    context.fillText('Neptune', neptune.position.x-30, neptune.position.y);\r\n\r\n    context.fillStyle = 'black';\r\n    context.font = '24px Arial';\r\n    context.fillText('Sun', sun.position.x-30, sun.position.y);\r\n});\r\n\r\n\r\n\r\nrender.mouse = mouse;\r\n// run the engine\r\nEngine.run(engine);\r\n\r\n// run the renderer\r\nRender.run(render);\r\n\r\n// Resize the render canvas on window resize\r\nwindow.addEventListener('resize', function() {\r\n    render.canvas.width = window.innerWidth;\r\n    render.canvas.height = window.innerHeight;\r\n    render.options.width = window.innerWidth;\r\n    render.options.height = window.innerHeight;\r\n});"],"names":["$0a8200a792fc4c3f$var$Engine","Matter","Engine","$0a8200a792fc4c3f$var$Render","Render","$0a8200a792fc4c3f$var$World","World","$0a8200a792fc4c3f$var$Bodies","Bodies","$0a8200a792fc4c3f$var$Constraint","Constraint","$0a8200a792fc4c3f$var$Mouse","Mouse","$0a8200a792fc4c3f$var$MouseConstraint","MouseConstraint","$0a8200a792fc4c3f$var$engine","create","$0a8200a792fc4c3f$var$render","element","document","body","engine","options","width","window","innerWidth","height","innerHeight","wireframes","background","style","margin","overflow","rectangle","circle","density","$0a8200a792fc4c3f$var$mouse","canvas","$0a8200a792fc4c3f$var$mouseConstraint","mouse","constraint","stiffness","render","visible","$0a8200a792fc4c3f$var$sun","fillStyle","collisionFilter","category","mask","$0a8200a792fc4c3f$var$mercury","$0a8200a792fc4c3f$var$mercury_elastic","pointA","x","y","bodyB","length","lineWidth","strokeStyle","$0a8200a792fc4c3f$var$venus","$0a8200a792fc4c3f$var$venus_elastic","$0a8200a792fc4c3f$var$earth","$0a8200a792fc4c3f$var$earth_elastic","$0a8200a792fc4c3f$var$mars","$0a8200a792fc4c3f$var$mars_elastic","$0a8200a792fc4c3f$var$jupiter","$0a8200a792fc4c3f$var$jupiter_elastic","$0a8200a792fc4c3f$var$saturn","$0a8200a792fc4c3f$var$saturn_elastic","$0a8200a792fc4c3f$var$uranus","$0a8200a792fc4c3f$var$uranus_elastic","$0a8200a792fc4c3f$var$neptune","isStatic","$0a8200a792fc4c3f$var$neptune_elastic","$0a8200a792fc4c3f$var$sun_elastic","add","world","Events","on","event","context","font","fillText","position","run","addEventListener"],"version":3,"file":"index.35c01288.js.map"}